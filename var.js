var
    cookieText = "We use cookies to analyze traffic and ads.",
    flagsPath = "\/data\/flags",
    countries = ["afAfeganistão", "zaÁfrica do Sul", "alAlbânia", "deAlemanha", "adAndorra", "aoAngola", "agAntígua e Barbuda", "saArábia Saudita", "dzArgélia", "arArgentina", "amArménia", "auAustrália", "atÁustria", "azAzerbaijão", "bsBahamas", "bhBahrein", "bdBangladesh", "bbBarbados", "beBélgica", "bzBelize", "bjBenim", "byBielorrússia", "boBolívia", "baBósnia e Herzegovina", "bwBotswana", "brBrasil", "bnBrunei", "bgBulgária", "bfBurkina Faso", "biBurundi", "btButão", "cvCabo Verde", "cmCamarões", "khCamboja", "caCanadá", "qaCatar", "kzCazaquistão", "tdChade", "clChile", "cyChipre", "coColômbia", "kmComores", "kpCoreia do Norte", "krCoreia do Sul", "ciCosta do Marfim", "crCosta Rica", "hrCroácia", "cuCuba", "dkDinamarca", "djDjibouti", "dmDominica", "egEgito", "svEl Salvador", "aeEmirados Árabes Unidos", "ecEquador", "erEritreia", "skEslováquia", "siEslovénia", "esEspanha", "psPalestina", "usEstados Unidos", "eeEstónia", "etEtiópia", "fjFiji", "phFilipinas", "fiFinlândia", "frFrança", "gaGabão", "gmGâmbia", "ghGana", "geGeórgia", "gdGranada", "grGrécia", "gtGuatemala", "gyGuiana", "gnGuiné", "gqGuiné Equatorial", "gwGuiné-Bissau", "htHaiti", "hnHonduras", "huHungria", "yeIémen", "ckIlhas Cook", "mhIlhas Marshall", "sbIlhas Salomão", "inÍndia", "idIndonésia", "irIrão", "iqIraque", "ieIrlanda", "isIslândia", "ilIsrael", "itItália", "jmJamaica", "jpJapão", "joJordânia", "kiKiribati", "xkKosovo", "kwKuwait", "laLaos", "lsLesoto", "lvLetónia", "lbLíbano", "lrLibéria", "lyLíbia", "liLiechtenstein", "ltLituânia", "luLuxemburgo", "mkMacedónia", "mgMadagáscar", "myMalásia", "mwMalawi", "mvMaldivas", "mlMali", "mtMalta", "maMarrocos", "muMaurícia", "mrMauritânia", "mxMéxico", "fmMicronésia", "mzMoçambique", "mdMoldávia", "mcMónaco", "mnMongólia", "meMontenegro", "mmMyanmar", "naNamíbia", "nrNauru", "npNepal", "niNicarágua", "neNíger", "ngNigéria", "nuNiue", "noNoruega", "nzNova Zelândia", "omOmã", "nlPaíses Baixos", "pwPalau", "paPanamá", "pgPapua-Nova Guiné", "pkPaquistão", "pyParaguai", "pePeru", "plPolónia", "ptPortugal", "keQuénia", "kgQuirguistão", "gbReino Unido", "cfRepública Centro-Africana", "czRepública Checa", "twRepública da China", "cdRepública Democrática do Congo", "cgRepública do Congo", "doRepública Dominicana", "cnRepública Popular da China", "roRoménia", "rwRuanda", "ruRússia", "ehSaara Ocidental", "wsSamoa", "smSan Marino", "lcSanta Lúcia", "knSão Cristóvão e Nevis", "stSão Tomé e Príncipe", "vcSão Vicente e Granadinas", "snSenegal", "slSerra Leoa", "rsSérvia", "scSeychelles", "sgSingapura", "sySíria", "soSomália", "lkSri Lanka", "szSuazilândia", "sdSudão", "ssSudão do Sul", "seSuécia", "chSuíça", "srSuriname", "thTailândia", "tjTajiquistão", "tzTanzânia", "tlTimor-Leste", "tgTogo", "toTonga", "ttTrinidad e Tobago", "tnTunísia", "tmTurquemenistão", "trTurquia", "tvTuvalu", "uaUcrânia", "ugUganda", "uyUruguai", "uzUzbequistão", "vuVanuatu", "vaVaticano", "veVenezuela", "vnVietname", "zmZâmbia", "zwZimbabwe"],
    leafletScript = "\/asset-markers.js?75f081c6",
    leafletStyle = "\/assets\/package-leaflet.css?75f081c6"
    ;
window.NodeList && !NodeList.prototype.forEach && (NodeList.prototype.forEach = Array.prototype.forEach), function (M) { function N(t) { return M.createElement(t) } function T(t) { return M.getElementById(t) } function I(t, e) { var n = M.querySelectorAll(t); return void 0 !== e && n.forEach(e), n } function O(t) { M.body.appendChild(t) } function D(t) { t.style.display = "block" } function R(t) { t.style.display = "none" } function B(t, e) { t.textContent = e } function j(t) { for (var e, n, i = t.length; --i;)e = t[n = Math.floor(Math.random() * (i + 1))], t[n] = t[i], t[i] = e } function t() { I(".adsbygoogle", function (t) { (window.adsbygoogle = window.adsbygoogle || []).push({}) }); var t = N("script"); t.src = "https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js", t.async = !0; var n, e = M.getElementsByTagName("script")[0]; function i(t) { var e = N("img"); e.src = "https://toplist." + t, e.width = 1, e.height = 1, n.appendChild(e) } e.parentNode.insertBefore(t, e), n = N("div"), i("cz/dot.asp?id=716967"), i("sk/dot.asp?id=1062564"), n.className = "hide", O(n) } function e() { i || (i = !0, n()) } var n, i; i = !(n = function () { var e, n, i, o, a, r, c, s, d, l, u, f, p, h, g, v, m, w, y, b, E, t, L, k, C, x; function S(t) { return T(c + t) } function z(t) { return { o: t, c: t.substring(0, 2), n: t.substring(2) } } function A() { f.length || (j(f = d.slice(0)), u = l = 0, B(g, "0"), B(v, "0")); var t, e, n, r = z(f.shift()), i = [r.o]; for (t = 0; t < 3; t++) { do { for (n = d[Math.floor(Math.random() * d.length)], e = 0; e < i.length; e++)i[e] == n && (n = null) } while (!n); i.push(n) } for (j(i), t = 0; t < 4; t++)!function (t, e) { B(t, e.n), t.onclick = function () { e.c == r.c ? (B(g, ++l), D(y)) : (B(v, ++u), B(E, r.n), D(b)), D(w), R(m), ga("send", "event", "mquiz", k, r.c + "-" + e.c) } }(S("option-" + t), z(i[t])); p.firstChild && p.firstChild.remove(), p.appendChild(function (t) { function e(t) { var e = N("source"); return e.type = "image/" + t, e.srcset = n + t + " 2x, " + i + t + " 1x", e } var n = s + "/h240/" + r.c + ".", i = s + "/h120/" + r.c + ".", o = N("img"); o.src = i + "png", o.height = "120", o.alt = "?", t && (o.loading = "lazy"); var a = N("picture"); return a.appendChild(e("webp")), a.appendChild(e("png")), a.appendChild(o), a }(l + u == 0)), B(h, (d.length - f.length).toString() + "."), D(m), R(w), R(y), R(b) } function q(t, e) { return formatted = t.getHours(), formatted += ":", t.getMinutes() < 10 && (formatted += "0"), formatted += t.getMinutes(), e && (formatted += ":", t.getSeconds() < 10 && (formatted += "0"), formatted += t.getSeconds()), formatted } I("[data-event]", function (t) { var e = t.getAttribute("data-event").split(","); t.onclick = function () { ga("send", "event", e[0], e[1], e[2]) } }), e = M.body.classList, n = "nav-open", i = "search-open", I("#content, .sidebar-sticky", function (t) { t.onclick = function (t) { (e.contains(n) || e.contains(i)) && (t.preventDefault(), e.remove(n), e.remove(i)) } }), function (t) { if (!M.cookie.match(/^(.*;)?\s*_ca\s*=\s*[^;]+(.*)?$/)) { var e = N("div"); e.id = "cookies-alert", B(e, t); var n = N("button"); B(n, "OK"), n.onclick = function () { R(e); var t = new Date; t.setTime(t.getTime() + 31536e6), M.cookie = "_ca=1; expires=" + t.toUTCString() + "; path=/" }, e.appendChild(n), O(e) } }(cookieText), I("." + (o = "next-element-") + "toggle", function (t) { var e = t.classList, n = t.nextElementSibling.classList; n.contains(o + "hidden") || n.add(o + "hidden"), e.add("a"), t.addEventListener("click", function () { n.toggle(o + "hidden"), e.toggle(o + "toggled") }) }), r = T(a = "quiz-mini"), I("." + a + "-scroll", function (t) { t.onclick = function () { r.scrollIntoView({ block: "start", behavior: "smooth" }), r.classList.add(a + "-focus"), setTimeout(function () { r.classList.remove(a + "-focus") }, 1e3) } }), c = "quiz-mini-", s = flagsPath, d = countries, f = [], p = S("image"), h = S("counter"), g = S("correct"), v = S("wrong"), m = S("options"), w = S("result"), y = S("result-correct"), b = S("result-wrong"), E = S("result-wrong-name"), t = S("refresh"), L = M.cookie.match(/^(.*;)?\s*country\s*=\s*([^;]+)(.*)?$/), k = L && 2 == L[2].length ? L[2].toLowerCase() : "xx", A(), t.onclick = function () { A() }, function (n, i, o, a, r) { var t = T("map-header"); if (t) { function e() { if (!d) { window.innerWidth <= 640 && (c.innerHTML = '<div class="' + o + a + '-container"><div class="' + o + "top " + o + 'right"><div class="' + o + a + "-zoom " + o + "bar " + o + a + '"><a id="map-close" class="' + o + a + '-zoom-in" href="#">×</a></div></div></div>', T("map-close").onclick = function () { return R(c), R(s), r.remove("map-open"), !1 }); var t = N("link"); t.type = "text/css", t.rel = "stylesheet", t.href = i, M.head.appendChild(t); var e = N("script"); e.src = n, O(e), d = !0 } } var c = T("map"), s = T("map-wrapper"), d = !1; if (t.onclick = function () { D(s), D(c), r.add("map-open"), e() }, 640 < window.innerWidth) { if (D(c), !("IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype)) return e(); var l = new IntersectionObserver(function (t) { 0 < t[0].intersectionRatio && (e(), l.unobserve(t[0].target)) }, {}); l.observe(s) } } }(leafletScript, leafletStyle, "leaflet-", "control", M.body.classList), I("[data-clipboard]", function (i) { i.addEventListener("click", function () { var t = N("textarea"); if (t.setAttribute("style", "font-size:16px;width:1px;height:1px;"), this.parentNode.insertBefore(t, this.nextSibling), t.value = this.getAttribute("data-clipboard"), t.focus(), navigator.userAgent.match(/ipad|ipod|iphone/i)) { t.contentEditable = !0, t.readOnly = !1; var e = M.createRange(); e.selectNodeContents(t); var n = window.getSelection(); n.removeAllRanges(), n.addRange(e), t.setSelectionRange(0, 999999) } else t.select(); M.execCommand("copy"), this.parentNode.removeChild(t), i.classList.contains("copied") || (i.classList.add("copied"), setTimeout(function () { i.classList.remove("copied") }, 1500)) }) }), function (t) { var e = T("quiz"); if (e && e.classList.contains("play")) { var n = 1, i = T(t + "watch"); setInterval(function () { B(i, n++) }, 1e3); var o = e.querySelector('input[name="send"]'); R(o); var a = 1, r = T(t + "status"), c = e.querySelectorAll(".flag"); c.forEach(function (e, t) { t ? R(e) : D(e), e.querySelectorAll("input").forEach(function (t) { t.classList.add("input-hide"), t.onchange = function () { R(e); var t = e.nextElementSibling; t.classList.contains("flag") ? D(t) : (D(o), T("frm-quizForm").submit()), r.style.width = a++ / c.length * 100 + "%" } }) }) } }("quiz-play-"), x = "datetime", I("[" + (C = "data-time-") + "utc]", function (t) { var e = new Date(t.getAttribute(C + "utc") + " UTC"), n = ""; switch (t.getAttribute(C + "format")) { case x: n += e.getDate() + ". " + e.getMonth() + ". " + e.getFullYear() + ", ", n += q(e, !1); break; case x + "-short": n += e.getDate() + ". " + e.getMonth() + "., ", n += q(e, !1); break; default: n += q(e, !0) }B(t, n) }) }), "interactive" === M.readyState || "complete" === M.readyState ? e() : (M.addEventListener && M.addEventListener("DOMContentLoaded", e), window.addEventListener ? window.addEventListener("load", e) : window.attachEvent ? window.attachEvent("onload", e) : e()), window.addEventListener ? window.addEventListener("load", t) : window.attachEvent && window.attachEvent("onload", t) }(document);